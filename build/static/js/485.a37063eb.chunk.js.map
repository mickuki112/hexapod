{"version":3,"file":"static/js/485.a37063eb.chunk.js","mappings":"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","sources":["templates/hexapodParams.js","templates/plotParams.js","components/vars.js","components/Nav.js","templates/plotter.js","components/HexapodPlot.js","components/generic/NumberInputField.js","components/generic/SmallWidgets.js","components/DimensionsWidget.js","components/generic/Slider.js","components/pagePartials/LegPoseWidgets.js","components/pages/ForwardKinematicsPage.js","components/pagePartials/PoseTable.js","components/pages/InverseKinematicsPage.js","components/pagePartials/RandomRobotGif.js","components/pages/LandingPage.js","components/pages/LegPatternPage.js","components/pages/WalkingGaitsPage.js","AppHelpers.js","_TRANSFORM.js","_HOOK.js","App.js","_VAR_CONFIG.js"],"sourcesContent":["// Previously all 100\nconst DEFAULT_DIMENSIONS = {\n    front: 500,\n    side: 800,\n    middle: 700,\n    coxia: 320,\n    femur: 830,\n    tibia: 1400,\n}\n\nconst DEFAULT_BODY_DIMENSIONS = {\n    front: DEFAULT_DIMENSIONS.front,\n    side: DEFAULT_DIMENSIONS.side,\n    middle: DEFAULT_DIMENSIONS.middle,\n}\nconst DEFAULT_LEG_DIMENSIONS = {\n    coxia: DEFAULT_DIMENSIONS.coxia,\n    femur: DEFAULT_DIMENSIONS.femur,\n    tibia: DEFAULT_DIMENSIONS.tibia,\n}\n\nconst DEFAULT_POSE = {\n    leftFront: { alpha: 0, beta: 0, gamma: 0 },\n    rightFront: { alpha: 0, beta: 0, gamma: 0 },\n    leftMiddle: { alpha: 0, beta: 0, gamma: 0 },\n    rightMiddle: { alpha: 0, beta: 0, gamma: 0 },\n    leftBack: { alpha: 0, beta: 0, gamma: 0 },\n    rightBack: { alpha: 0, beta: 0, gamma: 0 },\n}\n\nconst DEFAULT_PATTERN_PARAMS = { alpha: 0, beta: 0, gamma: 0 }\n\nconst DEFAULT_IK_PARAMS = {\n    tx: 0,\n    ty: 0,\n    tz: 0,\n    rx: 0,\n    ry: 0,\n    rz: 0,\n    hipStance: 0,\n    legStance: 0,\n}\n\nconst DEFAULT_GAIT_PARAMS = {\n    tx: 0,\n    tz: 0,\n    rx: 0,\n    ry: 0,\n    legStance: 0,\n    hipStance: 20,\n    hipSwing: 25,\n    liftSwing: 40,\n    stepCount: 5,\n}\n\nexport {\n    DEFAULT_DIMENSIONS,\n    DEFAULT_LEG_DIMENSIONS,\n    DEFAULT_BODY_DIMENSIONS,\n    DEFAULT_POSE,\n    DEFAULT_IK_PARAMS,\n    DEFAULT_PATTERN_PARAMS,\n    DEFAULT_GAIT_PARAMS,\n}\n","const BODY_MESH_COLOR = \"#ff6348\"\nconst BODY_COLOR = \"#FC427B\"\nconst COG_COLOR = \"#32ff7e\"\nconst LEG_COLOR = \"#EE5A24\"\nconst SUPPORT_POLYGON_MESH_COLOR = \"#3c6382\"\nconst AXIS_ZERO_LINE_COLOR = \"#079992\"\nconst PAPER_BG_COLOR = \"rgb(23, 33, 43)\"\nconst GROUND_COLOR = \"rgb(14, 40, 69)\"\n\nconst BODY_MESH_OPACITY = 0.3\nconst BODY_OUTLINE_WIDTH = 12\nconst COG_SIZE = 14\nconst HEAD_SIZE = 14\nconst LEG_OUTLINE_WIDTH = 10\nconst SUPPORT_POLYGON_MESH_OPACITY = 0.2\n\nconst DATA_INDEX_MAP = {\n    bodyMesh: 0,\n    bodyOutline: 1,\n    head: 2,\n    centerOfGravity: 3,\n    centerOfGravityProjection: 4,\n    rightMiddleLeg: 5,\n    rightFrontLeg: 6,\n    leftFrontLeg: 7,\n    leftMiddleLeg: 8,\n    leftBackLeg: 9,\n    rightBackLeg: 10,\n    supportPolygonMesh: 11,\n    hexapodXaxis: 12,\n    hexapodYaxis: 13,\n    hexapodZaxis: 14,\n    worldXaxis: 15,\n    worldYaxis: 16,\n    worldZaxis: 17,\n}\n\nconst DATA = [\n    {\n        name: \"bodyMesh\",\n        showlegend: true,\n        type: \"mesh3d\",\n        opacity: BODY_MESH_OPACITY,\n        color: BODY_MESH_COLOR,\n        x: [100.0, 100.0, -100.0, -100.0, -100.0, 100.0, 100.0],\n        y: [0.0, 100.0, 100.0, 0.0, -100.0, -100.0, 0.0],\n        z: [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0],\n    },\n    {\n        line: { color: BODY_COLOR, opacity: 1.0, width: BODY_OUTLINE_WIDTH },\n        name: \"bodyOutline\",\n        showlegend: true,\n        type: \"scatter3d\",\n        x: [100.0, 100.0, -100.0, -100.0, -100.0, 100.0, 100.0],\n        y: [0.0, 100.0, 100.0, 0.0, -100.0, -100.0, 0.0],\n        z: [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0],\n    },\n    {\n        marker: { color: BODY_COLOR, opacity: 1.0, size: HEAD_SIZE },\n        mode: \"markers\",\n        name: \"head\",\n        type: \"scatter3d\",\n        x: [0.0],\n        y: [100.0],\n        z: [100.0],\n    },\n    {\n        marker: { color: COG_COLOR, opacity: 1, size: COG_SIZE },\n        mode: \"markers\",\n        name: \"centerOfGravity\",\n        type: \"scatter3d\",\n        x: [0.0],\n        y: [0.0],\n        z: [100.0],\n    },\n    {\n        marker: { color: COG_COLOR, opacity: 0.5, size: 0.5 * COG_SIZE },\n        mode: \"markers\",\n        name: \"centerOfGravityProjection\",\n        type: \"scatter3d\",\n        x: [0.0],\n        y: [0.0],\n        z: [0.0],\n    },\n    {\n        line: { color: LEG_COLOR, width: LEG_OUTLINE_WIDTH },\n        name: \"rightMiddleLeg\",\n        showlegend: false,\n        type: \"scatter3d\",\n        x: [100.0, 200.0, 300.0, 300.0],\n        y: [0.0, 0.0, 0.0, 0.0],\n        z: [100.0, 100.0, 100.0, 0.0],\n    },\n    {\n        line: { color: LEG_COLOR, width: LEG_OUTLINE_WIDTH },\n        name: \"rightFrontLeg\",\n        showlegend: false,\n        type: \"scatter3d\",\n        x: [100.0, 170.71067811865476, 241.4213562373095, 241.4213562373095],\n        y: [100.0, 170.71067811865476, 241.42135623730948, 241.42135623730948],\n        z: [100.0, 100.0, 100.0, 0.0],\n    },\n    {\n        line: { color: LEG_COLOR, width: LEG_OUTLINE_WIDTH },\n        name: \"leftFrontLeg\",\n        showlegend: false,\n        type: \"scatter3d\",\n        x: [-100.0, -170.71067811865476, -241.42135623730948, -241.42135623730948],\n        y: [100.0, 170.71067811865476, 241.4213562373095, 241.4213562373095],\n        z: [100.0, 100.0, 100.0, 0.0],\n    },\n    {\n        line: { color: LEG_COLOR, width: LEG_OUTLINE_WIDTH },\n        name: \"leftMiddleLeg\",\n        showlegend: false,\n        type: \"scatter3d\",\n        x: [-100.0, -200.0, -300.0, -300.0],\n        y: [0.0, 1.2246467991473532e-14, 2.4492935982947064e-14, 2.4492935982947064e-14],\n        z: [100.0, 100.0, 100.0, 0.0],\n    },\n    {\n        line: { color: LEG_COLOR, width: LEG_OUTLINE_WIDTH },\n        name: \"leftBackLeg\",\n        showlegend: false,\n        type: \"scatter3d\",\n        x: [-100.0, -170.71067811865476, -241.42135623730954, -241.42135623730954],\n        y: [-100.0, -170.71067811865476, -241.42135623730948, -241.42135623730948],\n        z: [100.0, 100.0, 100.0, 0.0],\n    },\n    {\n        line: { color: LEG_COLOR, width: LEG_OUTLINE_WIDTH },\n        name: \"rightBackLeg\",\n        showlegend: false,\n        type: \"scatter3d\",\n        x: [100.0, 170.71067811865476, 241.42135623730948, 241.42135623730948],\n        y: [-100.0, -170.71067811865476, -241.42135623730954, -241.42135623730954],\n        z: [100.0, 100.0, 100.0, 0.0],\n    },\n    {\n        name: \"supportPolygonMesh\",\n        showlegend: false,\n        type: \"mesh3d\",\n        opacity: SUPPORT_POLYGON_MESH_OPACITY,\n        color: SUPPORT_POLYGON_MESH_COLOR,\n        x: [\n            300.0,\n            241.4213562373095,\n            -241.42135623730948,\n            -300.0,\n            -241.42135623730954,\n            241.42135623730948,\n        ],\n        y: [\n            0.0,\n            241.42135623730948,\n            241.4213562373095,\n            2.4492935982947064e-14,\n            -241.42135623730948,\n            -241.42135623730954,\n        ],\n        z: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0],\n    },\n    {\n        line: { color: \"#2f3640\", width: 2 },\n        name: \"hexapodXaxis\",\n        mode: \"lines\",\n        showlegend: false,\n        opacity: 1.0,\n        type: \"scatter3d\",\n        x: [0.0, 50.0],\n        y: [0.0, 0.0],\n        z: [100.0, 100.0],\n    },\n    {\n        line: { color: \"#e67e22\", width: 2 },\n        name: \"hexapodYaxis\",\n        mode: \"lines\",\n        showlegend: false,\n        opacity: 1.0,\n        type: \"scatter3d\",\n        x: [0.0, 0.0],\n        y: [0.0, 50.0],\n        z: [100.0, 100.0],\n    },\n    {\n        line: { color: \"#0097e6\", width: 2 },\n        name: \"hexapodZaxis\",\n        mode: \"lines\",\n        showlegend: false,\n        opacity: 1.0,\n        type: \"scatter3d\",\n        x: [0.0, 0.0],\n        y: [0.0, 0.0],\n        z: [100.0, 150.0],\n    },\n    {\n        line: { color: \"#2f3640\", width: 2 },\n        name: \"worldXaxis\",\n        showlegend: false,\n        mode: \"lines\",\n        opacity: 1.0,\n        type: \"scatter3d\",\n        x: [0, 50],\n        y: [0, 0],\n        z: [0, 0],\n    },\n    {\n        line: { color: \"#e67e22\", width: 2 },\n        name: \"worldYaxis\",\n        showlegend: false,\n        mode: \"lines\",\n        opacity: 1.0,\n        type: \"scatter3d\",\n        x: [0, 0],\n        y: [0, 50],\n        z: [0, 0],\n    },\n    {\n        line: { color: \"#0097e6\", width: 2 },\n        name: \"worldZaxis\",\n        showlegend: false,\n        mode: \"lines\",\n        opacity: 1.0,\n        type: \"scatter3d\",\n        x: [0, 0],\n        y: [0, 0],\n        z: [0, 50],\n    },\n]\n\nconst CAMERA_VIEW = {\n    center: {\n        x: 0.0005967195135552272,\n        y: 0.11455181630825005,\n        z: -0.44957387699746415,\n    },\n    eye: {\n        x: 0.010119765679525836,\n        y: 0.573601223004958,\n        z: 0.04247372257492105,\n    },\n    up: {\n        x: 0.006592638138864914,\n        y: 0.00003338632363222382,\n        z: 0.9999782677677168,\n    },\n}\n\nconst SCENE = {\n    xaxis: {\n        nticks: 1,\n        range: [-600, 600],\n        zerolinecolor: AXIS_ZERO_LINE_COLOR,\n        showbackground: false,\n    },\n    yaxis: {\n        nticks: 1,\n        range: [-600, 600],\n        zerolinecolor: AXIS_ZERO_LINE_COLOR,\n        showbackground: false,\n    },\n    zaxis: {\n        nticks: 1,\n        range: [-10, 590],\n        zerolinecolor: AXIS_ZERO_LINE_COLOR,\n        showbackground: true,\n        backgroundcolor: GROUND_COLOR,\n    },\n    aspectmode: \"manual\",\n    aspectratio: { x: 1, y: 1, z: 1 },\n    camera: CAMERA_VIEW,\n}\n\nconst LAYOUT = {\n    scene: SCENE,\n    margin: { b: 20, l: 10, r: 10, t: 20 },\n    paper_bgcolor: PAPER_BG_COLOR,\n    showlegend: false,\n    autosize: true,\n}\n\nexport { DATA, LAYOUT, DATA_INDEX_MAP, SCENE, CAMERA_VIEW }\n","import React from \"react\"\nimport { GiCoffeeMug } from \"react-icons/gi\"\nimport { FaGithubAlt, FaTimes, FaHome } from \"react-icons/fa\"\nimport { GrStatusGoodSmall } from \"react-icons/gr\"\n\nconst SECTION_NAMES = {\n    dimensions: \"Dimensions\",\n    inverseKinematics: \"Inverse Kinematics\",\n    forwardKinematics: \"Forward Kinematics\",\n    legPatterns: \"Leg Patterns\",\n    landingPage: \"Root\",\n    walkingGaits: \"Walking Gaits\",\n}\n\nconst PATH_NAMES = {\n    inverseKinematics: \"/inverse-kinematics\",\n    forwardKinematics: \"/forward-kinematics\",\n    legPatterns: \"/leg-patterns\",\n    landingPage: \"/\",\n    walkingGaits: \"/walking-gaits\",\n}\n\nconst ANGLE_NAMES = [\"alpha\", \"beta\", \"gamma\"]\nconst DIMENSION_NAMES = [\"front\", \"side\", \"middle\", \"coxia\", \"femur\", \"tibia\"]\nconst LEG_NAMES = [\n    \"leftFront\",\n    \"rightFront\",\n    \"leftMiddle\",\n    \"rightMiddle\",\n    \"leftBack\",\n    \"rightBack\",\n]\n\nconst IK_SLIDERS_LABELS = [\"tx\", \"ty\", \"tz\", \"rx\", \"ry\", \"rz\", \"hipStance\", \"legStance\"]\nconst RESET_LABEL = \"reset\"\n\nconst GAIT_SLIDER_LABELS = [\n    \"hipSwing\",\n    \"liftSwing\",\n    \"legStance\",\n    \"hipStance\",\n    \"tx\",\n    \"tz\",\n    \"rx\",\n    \"ry\",\n    \"stepCount\",\n]\n\n/*************\n * RANGE PARAMS\n *************/\n\nconst rangeParams = absVal => ({ minVal: -absVal, maxVal: absVal, stepVal: 1 })\nconst RANGES = {\n    30: rangeParams(30),\n    45: rangeParams(45),\n    60: rangeParams(60),\n    90: rangeParams(90),\n    180: rangeParams(180),\n}\n\nconst translateInputs = { minVal: -1, maxVal: 1, stepVal: 0.1 }\n\nconst RANGE_PARAMS = {\n    dimensionInputs: { minVal: 0, maxVal: Infinity, stepVal: 1 },\n    tx: translateInputs,\n    ty: translateInputs,\n    tz: translateInputs,\n    rx: RANGES[30],\n    ry: RANGES[30],\n    rz: RANGES[60],\n    legStance: RANGES[90],\n    hipStance: RANGES[60],\n    alpha: RANGES[30],\n    beta: RANGES[90],\n    gamma: RANGES[90],\n}\n\nconst GAIT_RANGE_PARAMS = {\n    tx: { minVal: -0.25, maxVal: 0.25, stepVal: 0.1, defaultVal: 0 },\n    tz: { minVal: -0.5, maxVal: 0.5, stepVal: 0.1, defaultVal: 0 },\n    rx: { minVal: -15, maxVal: 15, stepVal: 2.5, defaultVal: 0 },\n    ry: { minVal: -15, maxVal: 15, stepVal: 2.5, defaultVal: 0 },\n    legStance: { minVal: -50, maxVal: 50, stepVal: 1, defaultVal: 0 },\n    hipStance: { minVal: 0, maxVal: 40, stepVal: 1, defaultVal: 30 },\n    hipSwing: { minVal: 10, maxVal: 40, stepVal: 1, defaultVal: 25 },\n    liftSwing: { minVal: 10, maxVal: 70, stepVal: 1, defaultVal: 40 },\n    stepCount: { minVal: 3, maxVal: 70, stepVal: 1, defaultVal: 5 },\n}\n/*************\n * ICONS\n *************/\n\nconst ICON_COMPONENTS = {\n    mug: <GiCoffeeMug className=\"vertical-align\" />,\n    circle: <GrStatusGoodSmall className=\"small-icon\" />,\n    octocat: <FaGithubAlt className=\"vertical-align\" />,\n    times: <FaTimes className=\"vertical-align\" />,\n    home: <FaHome className=\"vertical-align\" />,\n}\n\n/*************\n * NAVIGATION\n *************/\n\nconst PATHS = {\n    inverseKinematics: {\n        path: PATH_NAMES.inverseKinematics,\n        description: SECTION_NAMES.inverseKinematics,\n        icon: ICON_COMPONENTS.circle,\n    },\n    forwardKinematics: {\n        path: PATH_NAMES.forwardKinematics,\n        description: SECTION_NAMES.forwardKinematics,\n        icon: ICON_COMPONENTS.circle,\n    },\n    legPatterns: {\n        path: PATH_NAMES.legPatterns,\n        description: SECTION_NAMES.legPatterns,\n        icon: ICON_COMPONENTS.circle,\n    },\n    landingPage: {\n        path: PATH_NAMES.landingPage,\n        description: SECTION_NAMES.landingPage,\n        icon: ICON_COMPONENTS.home,\n    },\n\n    walkingGaits: {\n        path: PATH_NAMES.walkingGaits,\n        description: SECTION_NAMES.walkingGaits,\n        icon: ICON_COMPONENTS.circle,\n    },\n}\n\nconst KOFI_LINK_PROPERTIES = {\n    name: \"KOFI\",\n    icon: ICON_COMPONENTS.mug,\n    description: \"Buy Mithi Ko-Fi 🍵\",\n    url: \"https://ko-fi.com/minimithi\",\n}\n\nconst REPO_LINK_PROPERTIES = {\n    name: \"REPO\",\n    icon: ICON_COMPONENTS.octocat,\n    description: \"Source Code\",\n    url: \"https://github.com/mithi/hexapod-irl\",\n}\n\nconst PATH_LINKS = [\n    PATHS.inverseKinematics,\n    PATHS.forwardKinematics,\n    PATHS.legPatterns,\n    PATHS.walkingGaits,\n    PATHS.landingPage,\n]\n\nconst URL_LINKS = [KOFI_LINK_PROPERTIES, REPO_LINK_PROPERTIES]\n\n/*************\n * LANDING PAGE\n *************/\n\nconst LANDING_PAGE_MESSAGE = `\n\n# Mithi's Bare Minimum Hexapod Robot Simulator\n\nEnjoy your stay and share with your friends!\n`\n\nexport {\n    ICON_COMPONENTS,\n    LANDING_PAGE_MESSAGE,\n    SECTION_NAMES,\n    ANGLE_NAMES,\n    DIMENSION_NAMES,\n    LEG_NAMES,\n    IK_SLIDERS_LABELS,\n    GAIT_SLIDER_LABELS,\n    RESET_LABEL,\n    PATHS,\n    URL_LINKS,\n    PATH_LINKS,\n    RANGE_PARAMS,\n    GAIT_RANGE_PARAMS,\n}\n","import React from \"react\"\nimport { URL_LINKS, PATH_LINKS } from \"./vars\"\nimport { Link } from \"react-router-dom\"\n\nconst NAV_BULLETS_PREFIX = \"navBullet\"\nconst NAV_DETAILED_PREFIX = \"navDetailed\"\n\nconst BulletPageLink = ({ link, showDesc }) => (\n    <li>\n        <Link to={link.path} className=\"link-icon\">\n            <span>\n                {link.icon} {showDesc ? link.description : null}\n            </span>\n        </Link>\n    </li>\n)\n\nconst BulletUrlLink = ({ path, description, icon }) => (\n    <li>\n        <a\n            href={path}\n            className=\"link-icon\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            children={\n                <span>\n                    {icon} {description}\n                </span>\n            }\n        />\n    </li>\n)\n\nconst NavBullets = () => (\n    <ul id=\"top-bar\">\n        {URL_LINKS.map(link => (\n            <BulletUrlLink\n                path={link.url}\n                key={NAV_BULLETS_PREFIX + link.url}\n                icon={link.icon}\n            />\n        ))}\n\n        {PATH_LINKS.map(link => (\n            <BulletPageLink key={NAV_BULLETS_PREFIX + link.path} link={link} />\n        ))}\n    </ul>\n)\n\nconst NavDetailed = () => (\n    <footer>\n        <nav id=\"nav\">\n            <ul className=\"grid-cols-1 no-bullet\">\n                {URL_LINKS.map(link => (\n                    <BulletUrlLink\n                        path={link.url}\n                        key={NAV_DETAILED_PREFIX + link.url}\n                        icon={link.icon}\n                        description={link.description}\n                    />\n                ))}\n\n                {PATH_LINKS.map(link => (\n                    <BulletPageLink\n                        key={NAV_DETAILED_PREFIX + link.path}\n                        link={link}\n                        showDesc={true}\n                    />\n                ))}\n            </ul>\n        </nav>\n    </footer>\n)\n\nconst Nav = () => <NavBullets />\n\nexport { Nav, NavDetailed }\n","import { DATA, SCENE, LAYOUT, CAMERA_VIEW } from \"./\"\n\nconst _getSumOfDimensions = dimensions =>\n    Object.values(dimensions).reduce((sum, dimension) => sum + dimension, 0)\n\nconst _drawHexapod = hexapod => {\n    const polygonVertices = hexapod.body.closedPointsList\n    const bodyX = polygonVertices.map(point => point.x)\n    const bodyY = polygonVertices.map(point => point.y)\n    const bodyZ = polygonVertices.map(point => point.z)\n    const { head, cog } = hexapod.body\n    const { cogProjection, legs, groundContactPoints } = hexapod\n\n    const dBodyMesh = {\n        ...DATA[0],\n        x: bodyX,\n        y: bodyY,\n        z: bodyZ,\n    }\n\n    const dBodyOutline = {\n        ...DATA[1],\n        x: bodyX,\n        y: bodyY,\n        z: bodyZ,\n    }\n\n    const dHead = {\n        ...DATA[2],\n        x: [head.x],\n        y: [head.y],\n        z: [head.z],\n    }\n\n    const dCog = {\n        ...DATA[3],\n        x: [cog.x],\n        y: [cog.y],\n        z: [cog.z],\n    }\n\n    const dCogProjection = {\n        ...DATA[4],\n        x: [cogProjection.x],\n        y: [cogProjection.y],\n        z: [cogProjection.z],\n    }\n\n    const dLegs = legs.map((leg, index) => ({\n        ...DATA[index + 5],\n        x: leg.allPointsList.map(point => point.x),\n        y: leg.allPointsList.map(point => point.y),\n        z: leg.allPointsList.map(point => point.z),\n    }))\n\n    const dSupportPolygon = {\n        ...DATA[11],\n        x: groundContactPoints.map(point => point.x),\n        y: groundContactPoints.map(point => point.y),\n        z: groundContactPoints.map(point => point.z),\n    }\n\n    const axisScale = hexapod.body.dimensions.front / 2\n    const { xAxis, yAxis, zAxis } = hexapod.localAxes\n    const hXaxis = {\n        ...DATA[12],\n        x: [cog.x, cog.x + axisScale * xAxis.x],\n        y: [cog.y, cog.y + axisScale * xAxis.y],\n        z: [cog.z, cog.z + axisScale * xAxis.z],\n    }\n\n    const hYaxis = {\n        ...DATA[13],\n        x: [cog.x, cog.x + axisScale * yAxis.x],\n        y: [cog.y, cog.y + axisScale * yAxis.y],\n        z: [cog.z, cog.z + axisScale * yAxis.z],\n    }\n\n    const hZaxis = {\n        ...DATA[14],\n        x: [cog.x, cog.x + axisScale * zAxis.x],\n        y: [cog.y, cog.y + axisScale * zAxis.y],\n        z: [cog.z, cog.z + axisScale * zAxis.z],\n    }\n\n    const wXaxis = {\n        ...DATA[15],\n        x: [0, axisScale],\n    }\n\n    const wYaxis = {\n        ...DATA[16],\n        y: [0, axisScale],\n    }\n\n    const wZaxis = {\n        ...DATA[17],\n        z: [0, axisScale],\n    }\n\n    return [\n        dBodyMesh,\n        dBodyOutline,\n        dHead,\n        dCog,\n        dCogProjection,\n        ...dLegs,\n        dSupportPolygon,\n        hXaxis,\n        hYaxis,\n        hZaxis,\n        wXaxis,\n        wYaxis,\n        wZaxis,\n    ]\n}\n\nconst getNewPlotParams = (hexapod, cameraView) => {\n    const data = _drawHexapod(hexapod)\n    if ([null, undefined, {}].includes(cameraView)) {\n        cameraView = CAMERA_VIEW\n    }\n    const range = _getSumOfDimensions(hexapod.dimensions)\n    const newRange = [-range, range]\n    const xaxis = { ...SCENE.xaxis, range: newRange }\n    const yaxis = { ...SCENE.yaxis, range: newRange }\n    const zaxis = { ...SCENE.zaxis, range: [-10, 2 * range - 10] }\n    const scene = {\n        ...SCENE,\n        xaxis,\n        yaxis,\n        zaxis,\n        camera: cameraView,\n    }\n\n    const layout = { ...LAYOUT, scene }\n\n    return [data, layout]\n}\n\nexport default getNewPlotParams\n","import React from \"react\"\nimport createPlotlyComponent from \"react-plotly.js/factory\"\nimport * as defaults from \"../templates\"\nimport getNewPlotParams from \"../templates/plotter\"\n\nclass HexapodPlot extends React.Component {\n    cameraView = defaults.CAMERA_VIEW\n    state = { ready: false }\n    Plot = null\n\n    logCameraView = relayoutData => {\n        this.cameraView = relayoutData[\"scene.camera\"]\n    }\n\n    componentDidMount() {\n        import(\"plotly.js-gl3d-dist-min\").then(Plotly => {\n            this.Plot = createPlotlyComponent(Plotly)\n            this.setState({ ready: true })\n        })\n    }\n\n    render() {\n        if (!this.state.ready) {\n            return <p>Loading your cute robot...</p>\n        }\n\n        if (!this.props.hexapod) {\n            return null\n        }\n        const [data, layout] = getNewPlotParams(this.props.hexapod, this.cameraView)\n\n        const props = {\n            data,\n            layout,\n            onRelayout: this.logCameraView,\n            revision: this.props.revision,\n            config: { displaylogo: false, responsive: true },\n            style: { height: \"100%\", width: \"100%\" },\n            useResizeHandler: true,\n        }\n\n        const Plot = this.Plot\n        return <Plot {...props} />\n    }\n}\n\nexport default HexapodPlot\n","import React, { Component } from \"react\"\n\nclass InputField extends Component {\n    state = { message: null }\n\n    constructor(props) {\n        super(props)\n        this.myRef = React.createRef()\n    }\n\n    componentDidMount() {\n        this.setState({ message: null })\n    }\n\n    handleChange(value) {\n        const { minVal, maxVal, stepVal } = this.props.rangeParams\n        const validity = this.myRef.current.validity\n\n        if (validity.badInput) {\n            this.setState({ message: \"NaN\" })\n            return\n        }\n\n        if (validity.rangeOverflow) {\n            this.setState({ message: `max=${maxVal}` })\n            return\n        }\n\n        if (validity.rangeUnderflow) {\n            this.setState({ message: `min=${minVal}` })\n            return\n        }\n\n        if (validity.stepMismatch) {\n            this.setState({ message: `step=${stepVal}` })\n            return\n        }\n\n        if (!this.myRef.current.checkValidity()) {\n            this.setState({ message: \"Error\" })\n            return\n        }\n\n        const numberValue = parseFloat(value)\n\n        if (isNaN(numberValue)) {\n            this.setState({ message: \"NaN\" })\n            return\n        }\n\n        this.setState({ message: null })\n        this.props.handleChange(this.props.name, numberValue)\n    }\n\n    render() {\n        const { name, rangeParams, id, value } = this.props\n        const newId = id || name\n        const { minVal, maxVal, stepVal } = rangeParams\n        const props = {\n            type: \"number\",\n            input: \"numeric\",\n            id: newId,\n            ref: this.myRef,\n            value,\n            min: minVal,\n            max: maxVal,\n            step: stepVal,\n            style: { margin: 0 },\n        }\n\n        return (\n            <div>\n                <label htmlFor={newId} className=\"label\">\n                    {name}\n                </label>\n                <input {...props} onChange={e => this.handleChange(e.target.value)} />\n                <label className=\"label red\" style={{ opacity: 1 }}>\n                    {this.state.message}\n                </label>\n            </div>\n        )\n    }\n}\n\nexport default InputField\n","import React from \"react\"\nimport { ICON_COMPONENTS, RESET_LABEL } from \"../vars\"\n\nconst AlertBox = ({ info }) => (\n    <div className=\"message\">\n        <h2 className=\"red\">\n            {ICON_COMPONENTS.times} {info.subject}\n        </h2>\n        <p>{info.body}</p>\n    </div>\n)\n\nconst ToggleSwitch = ({ id, value, handleChange, showValue }) => (\n    <div className=\"switch-container\">\n        <label className=\"switch\">\n            <input id={id} type=\"checkbox\" value={value} onChange={handleChange} />\n            <span className=\"toggle-switch-widget round\"></span>\n            <span style={{ opacity: 0 }}>{value}</span>\n        </label>\n        <label className=\"label\">{showValue ? value : null}</label>\n    </div>\n)\n\nconst Card = ({ title, other, children }) => (\n    <div>\n        <div className=\"card-header\">\n            {title}\n            {other}\n        </div>\n        {children}\n    </div>\n)\n\nconst BasicButton = ({ handleClick, children }) => (\n    <button type=\"button\" className=\"button\" onClick={handleClick}>\n        {children}\n    </button>\n)\n\nconst ResetButton = ({ reset }) => (\n    <BasicButton handleClick={reset}>{RESET_LABEL}</BasicButton>\n)\n\nexport { AlertBox, Card, ToggleSwitch, BasicButton, ResetButton }\n","import React, { Component } from \"react\"\nimport NumberInputField from \"./generic/NumberInputField\"\nimport { Card, ResetButton, ToggleSwitch } from \"./generic/SmallWidgets\"\nimport { DEFAULT_DIMENSIONS } from \"../templates\"\nimport { SECTION_NAMES, DIMENSION_NAMES, RANGE_PARAMS } from \"./vars\"\n\nclass DimensionsWidget extends Component {\n    sectionName = SECTION_NAMES.dimensions\n    state = { isFine: true }\n\n    reset = () => this.props.onUpdate(\"dimensions\", { dimensions: DEFAULT_DIMENSIONS })\n\n    toggleMode = () => this.setState({ isFine: !this.state.isFine })\n\n    updateFieldState = (name, value) => this.updateDimensions(name, value)\n\n    updateDimensions = (name, value) => {\n        const dimensions = { ...this.props.params.dimensions, [name]: value }\n        this.props.onUpdate(\"dimensions\", { dimensions })\n    }\n\n    get toggleSwitch() {\n        const props = {\n            id: \"DimensionsWidgetSwitch\",\n            value: this.state.isFine ? \"1x\" : \"5x\",\n            handleChange: this.toggleMode,\n            showValue: true,\n        }\n\n        return <ToggleSwitch {...props} />\n    }\n\n    get NumberInputFields() {\n        const { minVal, maxVal } = RANGE_PARAMS.dimensionInputs\n        const stepVal = this.state.isFine ? 1 : 5\n        const dimensions = this.props.params.dimensions\n\n        const numberInputFields = DIMENSION_NAMES.map(name => {\n            const props = {\n                name,\n                value: dimensions[name],\n                rangeParams: { minVal, maxVal, stepVal },\n                handleChange: this.updateFieldState,\n            }\n\n            return <NumberInputField {...props} key={name} />\n        })\n\n        return <div className=\"grid-cols-6\">{numberInputFields}</div>\n    }\n\n    render = () => (\n        <Card title={<h2>{this.sectionName}</h2>} other={this.toggleSwitch}>\n            {this.NumberInputFields}\n            <ResetButton reset={this.reset} />\n        </Card>\n    )\n}\n\nexport default DimensionsWidget\n","import React from \"react\"\nimport { RANGE_PARAMS } from \"../vars\"\n/* *\n *\n * ................\n * props of Slider component:\n * ................\n *   name: Label of the slider\n *   attributes: [minimum, maximum, step]\n *   value: current value (to be displayed)\n *   handleChange: callback to call when slider changes\n *\n * */\nconst Slider = ({ name, id, value, rangeParams, handleChange }) => (\n    <div className=\"slider-container\">\n        <div className=\"label\">\n            <label htmlFor={id || name}>{name}</label>: <span>{value}</span>\n        </div>\n        <input\n            type=\"range\"\n            id={id || name}\n            min={rangeParams.minVal}\n            max={rangeParams.maxVal}\n            step={rangeParams.stepVal}\n            value={value}\n            onChange={e => handleChange(name, e.target.value)}\n            className=\"slider\"\n        />\n    </div>\n)\n\nconst sliderList = ({ names, values, handleChange, rangeParams }) =>\n    names.map(name => (\n        <Slider\n            key={name}\n            name={name}\n            rangeParams={rangeParams ? rangeParams[name] : RANGE_PARAMS[name]}\n            handleChange={handleChange}\n            value={values[name]}\n        />\n    ))\n\nexport { Slider, sliderList }\n","import React, { Component } from \"react\"\nimport { Card } from \"../generic\"\nimport { ANGLE_NAMES, RANGE_PARAMS } from \"../vars\"\n\nclass LegPoseWidget extends Component {\n    updateFieldState = (angle, value) => {\n        const numberValue = Number(value)\n        if (!isNaN(numberValue)) {\n            this.props.onUpdate(this.props.name, angle, numberValue)\n        }\n    }\n\n    fields = Component => {\n        return ANGLE_NAMES.map(angle => {\n            const id = `${this.props.name}-${angle}`\n            const props = {\n                id,\n                name: angle,\n                key: id,\n                value: this.props.pose[angle],\n                rangeParams: RANGE_PARAMS[angle],\n                handleChange: this.updateFieldState,\n            }\n\n            return <Component {...props} />\n        })\n    }\n\n    render = () => (\n        <Card title={<h3>{this.props.name}</h3>}>\n            <div className={this.props.renderStacked ? \"grid-cols-1\" : \"grid-cols-3\"}>\n                {this.fields(this.props.WidgetType)}\n            </div>\n        </Card>\n    )\n}\n\nexport default LegPoseWidget\n","import React, { Component } from \"react\"\nimport LegPoseWidget from \"../pagePartials/LegPoseWidgets\"\nimport { Card, ToggleSwitch, ResetButton, NumberInputField, Slider } from \"../generic\"\nimport { DEFAULT_POSE } from \"../../templates\"\nimport { SECTION_NAMES, LEG_NAMES } from \"../vars\"\n\nclass ForwardKinematicsPage extends Component {\n    pageName = SECTION_NAMES.forwardKinematics\n    state = { WidgetType: NumberInputField }\n\n    componentDidMount = () => this.props.onMount(this.pageName)\n\n    reset = () => this.props.onUpdate(\"pose\", { pose: DEFAULT_POSE })\n\n    updatePose = (name, angle, value) => {\n        const pose = this.props.params.pose\n        const newPose = {\n            ...pose,\n            [name]: { ...pose[name], [angle]: value },\n        }\n        this.props.onUpdate(\"pose\", { pose: newPose })\n    }\n\n    toggleMode = () => {\n        const WidgetType = this.state.WidgetType === Slider ? NumberInputField : Slider\n        this.setState({ WidgetType })\n    }\n\n    legPoseWidget = name => (\n        <LegPoseWidget\n            key={name}\n            name={name}\n            pose={this.props.params.pose[name]}\n            onUpdate={this.updatePose}\n            WidgetType={this.state.WidgetType}\n            renderStacked={this.state.WidgetType === Slider}\n        />\n    )\n\n    get toggleSwitch() {\n        const props = {\n            id: \"FwdKinematicsSwitch\",\n            value: this.state.WidgetType === Slider ? \"Slide\" : \"Input\",\n            handleChange: this.toggleMode,\n            showValue: true,\n        }\n\n        return <ToggleSwitch {...props} />\n    }\n\n    render = () => (\n        <Card title={<h2>{this.pageName}</h2>} other={this.toggleSwitch}>\n            <div className=\"grid-cols-2\">\n                {LEG_NAMES.map(name => this.legPoseWidget(name))}\n            </div>\n            <ResetButton reset={this.reset} />\n        </Card>\n    )\n}\n\nexport default ForwardKinematicsPage\n","import React from \"react\"\nimport { POSITION_NAMES_LIST } from \"hexapod-kinematics-library\"\n\nconst POSITION_ALIAS = {\n    rightMiddle: \"rm\",\n    rightFront: \"rf\",\n    leftFront: \"lf\",\n    leftMiddle: \"lm\",\n    leftBack: \"lb\",\n    rightBack: \"rb\",\n}\n\nconst formatPose = pose =>\n    POSITION_NAMES_LIST.reduce((formattedPose, position) => {\n        const alias = POSITION_ALIAS[position]\n        const { alpha, beta, gamma } = pose[position]\n        formattedPose[alias] = {\n            alpha: Number(alpha).toFixed(2),\n            beta: Number(beta).toFixed(2),\n            gamma: Number(gamma).toFixed(2),\n        }\n        return formattedPose\n    }, {})\n\nconst PoseTable = ({ rm, rf, lf, lm, lb, rb }) => (\n    <table>\n        <thead>\n            <tr>\n                <th>POSITION</th>\n                <th>ALPHA</th>\n                <th>BETA</th>\n                <th>GAMMA</th>\n            </tr>\n        </thead>\n        <tbody>\n            <TableRow label=\"rightMiddle\" leg={rm} />\n            <TableRow label=\"rightFront\" leg={rf} />\n            <TableRow label=\"leftFront\" leg={lf} />\n            <TableRow label=\"leftMiddle\" leg={lm} />\n            <TableRow label=\"leftBack\" leg={lb} />\n            <TableRow label=\"rightBack\" leg={rb} />\n        </tbody>\n    </table>\n)\n\nconst TableRow = ({ label, leg }) => (\n    <tr>\n        <td>{label}</td>\n        <td>{leg.alpha}</td>\n        <td>{leg.beta}</td>\n        <td>{leg.gamma}</td>\n    </tr>\n)\n\nconst poseTable = ({ pose }) => {\n    const props = formatPose(pose)\n    return (\n        <div className=\"table-container\">\n            <PoseTable {...props} />\n        </div>\n    )\n}\n\nexport default poseTable\n","import React, { Component } from \"react\"\nimport { sliderList, Card, ResetButton, AlertBox } from \"../generic\"\nimport { solveInverseKinematics } from \"hexapod-kinematics-library\"\nimport { SECTION_NAMES, IK_SLIDERS_LABELS } from \"../vars\"\nimport { DEFAULT_IK_PARAMS } from \"../../templates\"\nimport PoseTable from \"../pagePartials/PoseTable\"\n\nclass InverseKinematicsPage extends Component {\n    pageName = SECTION_NAMES.inverseKinematics\n    state = { ikParams: DEFAULT_IK_PARAMS, errorMessage: null }\n\n    componentDidMount = () => this.props.onMount(this.pageName)\n\n    reset = () => {\n        const result = solveInverseKinematics(\n            this.props.params.dimensions,\n            DEFAULT_IK_PARAMS\n        )\n        this.updateHexapodPlot(result.hexapod, DEFAULT_IK_PARAMS)\n    }\n\n    updateHexapodPlot = (hexapod, ikParams) => {\n        this.setState({ ikParams, errorMessage: null })\n        this.props.onUpdate(\"hexapod\", { hexapod })\n    }\n\n    updateIkParams = (name, value) => {\n        const ikParams = { ...this.state.ikParams, [name]: value }\n        const result = solveInverseKinematics(this.props.params.dimensions, ikParams)\n\n        if (!result.obtainedSolution) {\n            this.props.onUpdate(\"hexapod\", { hexapod: null })\n            this.setState({ errorMessage: result.message })\n            return\n        }\n\n        this.updateHexapodPlot(result.hexapod, ikParams)\n    }\n\n    get sliders() {\n        return sliderList({\n            names: IK_SLIDERS_LABELS,\n            values: this.state.ikParams,\n            handleChange: this.updateIkParams,\n        })\n    }\n\n    get additionalInfo() {\n        if (this.state.errorMessage) {\n            return <AlertBox info={this.state.errorMessage} />\n        }\n\n        return <PoseTable pose={this.props.params.pose} />\n    }\n\n    render = () => (\n        <Card title={<h2>{this.pageName}</h2>}>\n            <div className=\"grid-cols-3\">{this.sliders.slice(0, 6)}</div>\n            <div className=\"grid-cols-2\">{this.sliders.slice(6, 8)}</div>\n            <ResetButton reset={this.reset} />\n            {this.additionalInfo}\n        </Card>\n    )\n}\n\nexport default InverseKinematicsPage\n","import React, { Suspense } from \"react\"\n\nconst MinimumRandomRobotGif = React.lazy(() => import(\"./MinimumRandomRobotGif\"))\n\nconst RandomRobotGif = () => (\n    <div style={{ height: \"80px\" }}>\n        <Suspense fallback={<p>A cute random robot will soon appear!</p>}>\n            <MinimumRandomRobotGif />\n        </Suspense>\n    </div>\n)\n\nexport default RandomRobotGif\n","import React from \"react\"\nimport { SECTION_NAMES } from \"../vars\"\nimport RandomRobotGif from \"../pagePartials/RandomRobotGif\"\n\nclass LandingPage extends React.Component {\n    pageName = SECTION_NAMES.landingPage\n\n    componentDidMount = () => this.props.onMount(this.pageName)\n\n    render = () => (\n        <>\n            <div id=\"landing\">\n                <RandomRobotGif />\n            </div>\n        </>\n    )\n}\n\nexport default LandingPage\n","import React, { Component } from \"react\"\nimport { sliderList, Card, ResetButton } from \"../generic\"\nimport { DEFAULT_POSE, DEFAULT_PATTERN_PARAMS } from \"../../templates\"\nimport { SECTION_NAMES, ANGLE_NAMES } from \"../vars\"\n\nclass LegPatternPage extends Component {\n    pageName = SECTION_NAMES.legPatterns\n    state = { patternParams: DEFAULT_PATTERN_PARAMS }\n\n    componentDidMount = () => {\n        this.props.onMount(this.pageName)\n        this.reset()\n    }\n\n    reset = () => {\n        this.props.onUpdate(\"pose\", { pose: DEFAULT_POSE })\n        this.setState({ patternParams: DEFAULT_PATTERN_PARAMS })\n    }\n\n    updatePatternPose = (name, value) => {\n        const patternParams = { ...this.state.patternParams, [name]: Number(value) }\n        let newPose = {}\n\n        for (const leg in DEFAULT_POSE) {\n            newPose[leg] = patternParams\n        }\n\n        this.props.onUpdate(\"pose\", { pose: newPose })\n        this.setState({ patternParams })\n    }\n\n    get sliders() {\n        return sliderList({\n            names: ANGLE_NAMES,\n            values: this.state.patternParams,\n            handleChange: this.updatePatternPose,\n        })\n    }\n\n    render = () => (\n        <Card title={<h2>{this.pageName}</h2>}>\n            <div className=\"grid-cols-1\">{this.sliders}</div>\n            <ResetButton reset={this.reset} />\n        </Card>\n    )\n}\n\nexport default LegPatternPage\n","import React, { Component } from \"react\"\nimport { sliderList, Card, ResetButton, ToggleSwitch } from \"../generic\"\nimport { SECTION_NAMES, GAIT_SLIDER_LABELS, GAIT_RANGE_PARAMS } from \"../vars\"\nimport PoseTable from \"../pagePartials/PoseTable\"\nimport { tRotZmatrix, VirtualHexapod, getWalkSequence } from \"hexapod-kinematics-library\"\nimport { DEFAULT_GAIT_PARAMS } from \"../../templates\"\n\nconst ANIMATION_DELAY = 25\n\nconst getPose = (sequences, i) => {\n    return Object.keys(sequences).reduce((newSequences, legPosition) => {\n        const { alpha, beta, gamma } = sequences[legPosition]\n        newSequences[legPosition] = { alpha: alpha[i], beta: beta[i], gamma: gamma[i] }\n        return newSequences\n    }, {})\n}\n\nconst newSwitch = (id, value, handleChange) => (\n    <ToggleSwitch id={id} handleChange={handleChange} value={value} showValue={true} />\n)\n\nconst switches = (switch1, switch2, switch3) => (\n    <div className=\"grid-cols-3\" style={{ paddingBottom: \"20px\" }}>\n        {switch1}\n        {switch2}\n        {switch3}\n    </div>\n)\n\nconst countSteps = sequence => sequence[\"leftMiddle\"].alpha.length\n\nclass WalkingGaitsPage extends Component {\n    pageName = SECTION_NAMES.walkingGaits\n    currentTwist = 0\n    walkSequence = null\n    state = {\n        gaitParams: DEFAULT_GAIT_PARAMS,\n        isAnimating: false,\n        isTripodGait: true,\n        isForward: true,\n        inWalkMode: true,\n        showGaitWidgets: true,\n        animationCount: 0,\n    }\n\n    componentDidMount = () => {\n        this.props.onMount(this.pageName)\n        const { isTripodGait, inWalkMode } = this.state\n        this.setWalkSequence(DEFAULT_GAIT_PARAMS, isTripodGait, inWalkMode)\n    }\n\n    componentWillUnmount = () => {\n        clearInterval(this.intervalID)\n    }\n\n    animate = () => {\n        const { isForward, inWalkMode } = this.state\n\n        const stepCount = countSteps(this.walkSequence)\n        const animationCount = (this.state.animationCount + 1) % stepCount\n        this.setState({ animationCount })\n\n        const tempStep = isForward ? animationCount : stepCount - animationCount\n        const step = Math.max(0, Math.min(stepCount - 1, tempStep))\n\n        const pose = getPose(this.walkSequence, step)\n\n        if (inWalkMode) {\n            this.onUpdate(pose, this.currentTwist)\n            return\n        }\n\n        const deltaTwist = (this.state.gaitParams.hipSwing * 2) / stepCount\n        const twist = isForward\n            ? (this.currentTwist + deltaTwist) % 360\n            : (this.currentTwist - deltaTwist) % 360\n\n        this.onUpdate(pose, twist)\n    }\n\n    onUpdate = (pose, currentTwist) => {\n        this.currentTwist = currentTwist\n\n        const { dimensions } = this.props.params\n        const hexapod = new VirtualHexapod(dimensions, pose, { wontRotate: true })\n\n        // ❗❗️HACK When we've passed undefined pose values for some reason\n        if (!hexapod || !hexapod.body) {\n            return\n        }\n\n        const matrix = tRotZmatrix(currentTwist)\n        this.props.onUpdate(\"hexapod\", { hexapod: hexapod.cloneTrot(matrix) })\n    }\n\n    setWalkSequence = (gaitParams, isTripodGait, inWalkMode) => {\n        const gaitType = isTripodGait ? \"tripod\" : \"ripple\"\n        const walkMode = inWalkMode ? \"walking\" : \"rotating\"\n\n        const { dimensions } = this.props.params\n        const { animationCount } = this.state\n\n        this.walkSequence =\n            getWalkSequence(dimensions, gaitParams, gaitType, walkMode) ||\n            this.walkSequence\n\n        const pose = getPose(this.walkSequence, animationCount)\n        this.onUpdate(pose, this.currentTwist)\n        this.setState({ gaitParams, isTripodGait, inWalkMode })\n    }\n\n    reset = () => {\n        const { isTripodGait, inWalkMode } = this.state\n        this.currentTwist = 0\n        this.setWalkSequence(DEFAULT_GAIT_PARAMS, isTripodGait, inWalkMode)\n    }\n\n    updateGaitParams = (name, value) => {\n        const { isTripodGait, inWalkMode } = this.state\n        const gaitParams = { ...this.state.gaitParams, [name]: value }\n        this.setWalkSequence(gaitParams, isTripodGait, inWalkMode)\n    }\n\n    toggleWalkMode = () => {\n        const { gaitParams, isTripodGait } = this.state\n        const inWalkMode = !this.state.inWalkMode\n        this.setWalkSequence(gaitParams, isTripodGait, inWalkMode)\n    }\n\n    toggleGaitType = () => {\n        const { gaitParams, inWalkMode } = this.state\n        const isTripodGait = !this.state.isTripodGait\n        this.setWalkSequence(gaitParams, isTripodGait, inWalkMode)\n    }\n\n    toggleWidgets = () => this.setState({ showGaitWidgets: !this.state.showGaitWidgets })\n\n    toggleDirection = () => this.setState({ isForward: !this.state.isForward })\n\n    toggleAnimating = () => {\n        const isAnimating = !this.state.isAnimating\n        this.setState({ isAnimating })\n\n        if (isAnimating) {\n            this.intervalID = setInterval(this.animate, ANIMATION_DELAY)\n        } else {\n            clearInterval(this.intervalID)\n        }\n    }\n\n    get widgetsSwitch() {\n        const value = this.state.showGaitWidgets ? \"controlsShown\" : \"poseShown\"\n        return newSwitch(\"widgetSw\", value, this.toggleWidgets)\n    }\n\n    get animatingSwitch() {\n        const value = this.state.isAnimating ? \"PLAYING...\" : \"...PAUSED. \"\n        return newSwitch(\"animatingSw\", value, this.toggleAnimating)\n    }\n\n    get gaitTypeSwitch() {\n        const value = this.state.isTripodGait ? \"tripodGait\" : \"rippleGait\"\n        return newSwitch(\"gaitSw\", value, this.toggleGaitType)\n    }\n\n    get directionSwitch() {\n        const value = this.state.isForward ? \"isForward\" : \"isBackward\"\n        return newSwitch(\"directionSw\", value, this.toggleDirection)\n    }\n\n    get rotateSwitch() {\n        const value = this.state.inWalkMode ? \"isWalk\" : \"isRotate\"\n        return newSwitch(\"rotateSw\", value, this.toggleWalkMode)\n    }\n\n    get sliders() {\n        const sliders = sliderList({\n            names: GAIT_SLIDER_LABELS,\n            values: this.state.gaitParams,\n            rangeParams: GAIT_RANGE_PARAMS,\n            handleChange: this.updateGaitParams,\n        })\n\n        return <div className=\"grid-cols-2\">{sliders}</div>\n    }\n\n    get animationCount() {\n        const { isAnimating, animationCount } = this.state\n        return (\n            <div className=\"text\" hidden={!isAnimating}>\n                {animationCount}\n            </div>\n        )\n    }\n\n    render() {\n        const animationControlSwitches = switches(\n            this.animatingSwitch,\n            this.widgetsSwitch\n        )\n        const gaitControlSwitches = switches(\n            this.gaitTypeSwitch,\n            this.directionSwitch,\n            this.rotateSwitch\n        )\n\n        const { showGaitWidgets } = this.state\n        const { pose } = this.props.params\n\n        return (\n            <Card title={<h2>{this.pageName}</h2>} other={this.animationCount}>\n                {animationControlSwitches}\n\n                <div hidden={!showGaitWidgets}>\n                    {gaitControlSwitches}\n                    {this.sliders}\n                    <ResetButton reset={this.reset} />\n                </div>\n\n                <div hidden={showGaitWidgets}>\n                    <PoseTable pose={pose} />\n                </div>\n            </Card>\n        )\n    }\n}\n\nexport default WalkingGaitsPage\n","import React from \"react\"\nimport { Route, Switch, Redirect } from \"react-router-dom\"\nimport { PATHS } from \"./components/vars\"\nimport * as defaults from \"./templates\"\nimport { VirtualHexapod } from \"hexapod-kinematics-library\"\nimport {\n    InverseKinematicsPage,\n    WalkingGaitsPage,\n    ForwardKinematicsPage,\n    LegPatternPage,\n    LandingPage,\n} from \"./components/pages\"\n\nconst Page = ({ pageComponent }) => (\n    <Switch>\n        <Route path=\"/\" exact>\n            {pageComponent(LandingPage)}\n        </Route>\n        <Route path={PATHS.legPatterns.path} exact>\n            {pageComponent(LegPatternPage)}\n        </Route>\n        <Route path={PATHS.forwardKinematics.path} exact>\n            {pageComponent(ForwardKinematicsPage)}\n        </Route>\n        <Route path={PATHS.inverseKinematics.path} exact>\n            {pageComponent(InverseKinematicsPage)}\n        </Route>\n        <Route path={PATHS.walkingGaits.path} exact>\n            {pageComponent(WalkingGaitsPage)}\n        </Route>\n        <Route>\n            <Redirect to=\"/\" />\n        </Route>\n    </Switch>\n)\n\nconst updateHexapod = (updateType, newParam, oldHexapod) => {\n    if (updateType === \"default\") {\n        return new VirtualHexapod(defaults.DEFAULT_DIMENSIONS, defaults.DEFAULT_POSE)\n    }\n\n    let hexapod = null\n    const { pose, dimensions } = oldHexapod\n\n    if (updateType === \"pose\") {\n        hexapod = new VirtualHexapod(dimensions, newParam.pose)\n    }\n\n    if (updateType === \"dimensions\") {\n        hexapod = new VirtualHexapod(newParam.dimensions, pose)\n    }\n\n    if (updateType === \"hexapod\") {\n        hexapod = newParam.hexapod\n    }\n\n    if (!hexapod || !hexapod.foundSolution) {\n        return oldHexapod\n    }\n\n    return hexapod\n}\n\nexport { Page, updateHexapod }\n","const LEG_POSITIONS = [\n    \"leftFront\",\n    \"rightFront\",\n    \"leftMiddle\",\n    \"rightMiddle\",\n    \"leftBack\",\n    \"rightBack\",\n]\n\nconst LEFT_LEGS = [\"leftFront\", \"leftMiddle\", \"leftBack\"]\n\nconst clean = (x, shouldInvert) => {\n    let directed = shouldInvert ? -1 * x : x\n    return Math.max(Math.min(Math.round(directed) + 90, 180), 0)\n}\n\nconst transformPose = pose => {\n    let newPose = {}\n\n    for (let leg of LEG_POSITIONS) {\n        const { alpha, beta, gamma } = pose[leg]\n        const isLeft = LEFT_LEGS.includes(leg)\n        newPose[leg] = {\n            alpha: clean(alpha, true),\n            beta: clean(beta, isLeft),\n            gamma: clean(gamma, !isLeft),\n        }\n    }\n\n    return newPose\n}\n\nexport default transformPose\n","import { useState, useEffect, useCallback, useRef } from \"react\"\nimport socketIOClient from \"socket.io-client\"\nimport {\n    SOCKET_SERVER_URL,\n    MINIMUM_TIME_BETWEEN_MESSAGES,\n    CLIENT_SENDER_NAME,\n    CHANNEL_NAME,\n} from \"./_VAR_CONFIG\"\n\nimport transformPose from \"./_TRANSFORM\"\n\nconst useSendPose = () => {\n    const socketRef = useRef()\n    const [lastDate, setLastDate] = useState(() => new Date())\n    // delta date is the interval between the last two messages sent\n    const [deltaDate, setDeltaDate] = useState(0)\n\n    useEffect(() => {\n        socketRef.current = socketIOClient(SOCKET_SERVER_URL)\n        return () => socketRef.current.disconnect()\n    }, [])\n\n    const sendPose = useCallback(\n        pose => {\n            const currentDate = new Date()\n            const newDeltaDate = currentDate - lastDate\n\n            // we shouldn't spam the robot with commands\n            if (newDeltaDate < MINIMUM_TIME_BETWEEN_MESSAGES) {\n                console.log(\"too soon: \", newDeltaDate)\n                return\n            }\n\n            console.log(\"just right: \", newDeltaDate)\n\n            socketRef.current.emit(CHANNEL_NAME, {\n                pose: transformPose(pose),\n                sender: CLIENT_SENDER_NAME,\n                time: currentDate.getTime(),\n            })\n\n            setLastDate(currentDate)\n            setDeltaDate(newDeltaDate)\n        },\n        [lastDate]\n    )\n\n    return [sendPose, deltaDate]\n}\n\nexport default useSendPose\n","import React, { useState, useEffect, useCallback } from \"react\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport { DEFAULT_POSE } from \"./templates\"\nimport { SECTION_NAMES } from \"./components/vars\"\nimport { Nav, NavDetailed, DimensionsWidget } from \"./components\"\nimport { updateHexapod, Page } from \"./AppHelpers\"\nimport HexapodPlot from \"./components/HexapodPlot\"\nimport useSendPose from \"./_HOOK\"\n\nconst App = () => {\n    const [pageName, setPageName] = useState(SECTION_NAMES.landingPage)\n    const [hexapod, setHexapod] = useState(() => updateHexapod(\"default\"))\n    const [revision, setRevision] = useState(0)\n    const [animation, setAnimation] = useState(true)\n    const inHexapodPage = pageName !== SECTION_NAMES.landingPage\n    const [sendPose, deltaDate] = useSendPose()\n\n    useEffect(() => sendPose(hexapod.pose), [hexapod, sendPose])\n\n    const manageState = useCallback((updateType, newParam) => {\n        setRevision(r => r + 1)\n        setHexapod(h => updateHexapod(updateType, newParam, h))\n    }, [])\n\n    useEffect(() => {\n        document.title = pageName + \" - Mithi's Bare Minimum Hexapod Robot Simulator\"\n        manageState(\"pose\", { pose: DEFAULT_POSE })\n    }, [pageName, manageState])\n\n    const pageComponent = useCallback(\n        Component => (\n            <Component\n                onMount={newPageName => setPageName(newPageName)}\n                onUpdate={manageState}\n                params={{\n                    dimensions: hexapod.dimensions,\n                    pose: hexapod.pose,\n                }}\n            />\n        ),\n        [manageState, hexapod]\n    )\n\n    return (\n        <Router>\n            <Nav />\n            <div id=\"main\">\n                <button onClick={()=>setAnimation(!animation)}>onn/off</button>\n\n                <div id=\"sidebar\">\n                    <div hidden={!inHexapodPage}>\n                        <DimensionsWidget\n                            params={{ dimensions: hexapod.dimensions }}\n                            onUpdate={manageState}\n                        />\n                    </div>\n                    <Page pageComponent={pageComponent} />\n                    <p> deltaDate: {deltaDate} </p>\n                    {!inHexapodPage ? <NavDetailed /> : null}\n                </div>\n                <div id=\"plot\" className=\"border\" hidden={!inHexapodPage}>\n                    {animation && <HexapodPlot revision={revision} hexapod={hexapod} />}\n                </div>\n            </div>\n            {inHexapodPage ? <NavDetailed /> : null}\n        </Router>\n    )\n}\n\nexport default App\n","// the channel where the client sends command, and the server receives commands\nconst CHANNEL_NAME = \"setServo\"\n\n// the port / url where the server listens for commands from clients (clients like our react app)\nconst SOCKET_SERVER_PORT = 4001\nconst SOCKET_SERVER_URL = `http://192.168.1.100:${SOCKET_SERVER_PORT}`\n\n// client urls that are allowed to connect with our robot\nconst SOCKET_CLIENT_URLS = [\"http://localhost:5000\", \"http://192.168.254.105:5000\",\"http://localhost:4001\"]\n\n// we don't want to spam too many commands to our robot\n// (in milliseconds)\nconst MINIMUM_TIME_BETWEEN_MESSAGES = 80\n\n// the client app should send its name to the server\n// so that the server knows immediately where the command is coming from\n// for information purpose only, should NOT be used for security purposes\nconst CLIENT_SENDER_NAME = \"react-app\"\n\nmodule.exports = {\n    SOCKET_CLIENT_URLS,\n    SOCKET_SERVER_PORT,\n    SOCKET_SERVER_URL,\n    MINIMUM_TIME_BETWEEN_MESSAGES,\n    CLIENT_SENDER_NAME,\n    CHANNEL_NAME,\n}\n"],"names":["DEFAULT_DIMENSIONS","front","side","middle","coxia","femur","tibia","DEFAULT_POSE","leftFront","alpha","beta","gamma","rightFront","leftMiddle","rightMiddle","leftBack","rightBack","DEFAULT_PATTERN_PARAMS","DEFAULT_IK_PARAMS","tx","ty","tz","rx","ry","rz","hipStance","legStance","DEFAULT_GAIT_PARAMS","hipSwing","liftSwing","stepCount","BODY_COLOR","COG_COLOR","LEG_COLOR","AXIS_ZERO_LINE_COLOR","LEG_OUTLINE_WIDTH","DATA","name","showlegend","type","opacity","color","x","y","z","line","width","marker","size","mode","CAMERA_VIEW","center","eye","up","SCENE","xaxis","nticks","range","zerolinecolor","showbackground","yaxis","zaxis","backgroundcolor","aspectmode","aspectratio","camera","LAYOUT","scene","margin","b","l","r","t","paper_bgcolor","autosize","SECTION_NAMES","PATH_NAMES","ANGLE_NAMES","DIMENSION_NAMES","LEG_NAMES","IK_SLIDERS_LABELS","GAIT_SLIDER_LABELS","rangeParams","absVal","minVal","maxVal","stepVal","RANGES","translateInputs","RANGE_PARAMS","dimensionInputs","Infinity","GAIT_RANGE_PARAMS","defaultVal","ICON_COMPONENTS","mug","className","circle","octocat","times","home","PATHS","inverseKinematics","path","description","icon","forwardKinematics","legPatterns","landingPage","walkingGaits","PATH_LINKS","URL_LINKS","url","NAV_BULLETS_PREFIX","NAV_DETAILED_PREFIX","BulletPageLink","link","showDesc","to","BulletUrlLink","href","target","rel","children","NavBullets","id","map","NavDetailed","Nav","hexapod","cameraView","data","polygonVertices","body","closedPointsList","bodyX","point","bodyY","bodyZ","head","cog","cogProjection","legs","groundContactPoints","dBodyMesh","dBodyOutline","dHead","dCog","dCogProjection","dLegs","leg","index","allPointsList","dSupportPolygon","axisScale","dimensions","localAxes","xAxis","yAxis","zAxis","hXaxis","hYaxis","hZaxis","wXaxis","wYaxis","wZaxis","_drawHexapod","undefined","includes","Object","values","reduce","sum","dimension","newRange","HexapodPlot","defaults","state","ready","Plot","logCameraView","relayoutData","then","Plotly","createPlotlyComponent","setState","this","props","getNewPlotParams","layout","onRelayout","revision","config","displaylogo","responsive","style","height","useResizeHandler","React","InputField","message","myRef","value","validity","current","badInput","rangeOverflow","rangeUnderflow","stepMismatch","checkValidity","numberValue","parseFloat","isNaN","handleChange","newId","input","ref","min","max","step","htmlFor","onChange","e","Component","AlertBox","info","subject","ToggleSwitch","showValue","Card","title","other","BasicButton","handleClick","onClick","ResetButton","reset","DimensionsWidget","sectionName","isFine","onUpdate","toggleMode","updateFieldState","updateDimensions","params","render","toggleSwitch","NumberInputFields","numberInputFields","NumberInputField","key","Slider","sliderList","names","LegPoseWidget","angle","Number","fields","pose","renderStacked","WidgetType","ForwardKinematicsPage","pageName","componentDidMount","onMount","updatePose","newPose","legPoseWidget","POSITION_ALIAS","PoseTable","rm","rf","lf","lm","lb","rb","TableRow","label","POSITION_NAMES_LIST","formattedPose","position","alias","toFixed","formatPose","InverseKinematicsPage","ikParams","errorMessage","result","solveInverseKinematics","updateHexapodPlot","updateIkParams","obtainedSolution","sliders","slice","additionalInfo","MinimumRandomRobotGif","Suspense","fallback","LandingPage","LegPatternPage","patternParams","updatePatternPose","getPose","sequences","i","keys","newSequences","legPosition","newSwitch","switches","switch1","switch2","switch3","paddingBottom","countSteps","sequence","length","WalkingGaitsPage","currentTwist","walkSequence","gaitParams","isAnimating","isTripodGait","isForward","inWalkMode","showGaitWidgets","animationCount","setWalkSequence","componentWillUnmount","clearInterval","intervalID","animate","tempStep","Math","deltaTwist","twist","VirtualHexapod","wontRotate","matrix","tRotZmatrix","cloneTrot","gaitType","walkMode","getWalkSequence","updateGaitParams","toggleWalkMode","toggleGaitType","toggleWidgets","toggleDirection","toggleAnimating","setInterval","hidden","animationControlSwitches","animatingSwitch","widgetsSwitch","gaitControlSwitches","gaitTypeSwitch","directionSwitch","rotateSwitch","Page","pageComponent","exact","updateHexapod","updateType","newParam","oldHexapod","foundSolution","LEG_POSITIONS","LEFT_LEGS","clean","shouldInvert","directed","round","isLeft","socketRef","useRef","useState","Date","lastDate","setLastDate","deltaDate","setDeltaDate","useEffect","socketIOClient","SOCKET_SERVER_URL","disconnect","useCallback","currentDate","newDeltaDate","MINIMUM_TIME_BETWEEN_MESSAGES","console","log","emit","CHANNEL_NAME","transformPose","sender","CLIENT_SENDER_NAME","time","getTime","setPageName","setHexapod","setRevision","animation","setAnimation","inHexapodPage","useSendPose","sendPose","manageState","h","document","newPageName","module","exports","SOCKET_CLIENT_URLS","SOCKET_SERVER_PORT"],"sourceRoot":""}